{
	"info": {
		"_postman_id": "1393f8cd-2139-4ae6-95b3-b6b384d1a28c",
		"name": "OSDM - Sqills sandbox",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4305960"
	},
	"item": [
		{
			"name": "Get station info",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Places",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Locations are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.places).not.to.be.undefined;",
									"",
									"    pm.environment.set('place_id', response.places[0].id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"placeInput\": {\n        \"name\": \"Paris Nord\"\n    },\n    \"restrictions\": {\n        \"type\": \"STOP\",\n        \"usage\": \"ORIGIN\",\n        \"numberOfResults\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/places",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"places"
							]
						}
					},
					"response": []
				},
				{
					"name": "Places/{id}",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/places/{{place_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"places",
								"{{place_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get station Brig",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Places",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Locations are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.places).not.to.be.undefined;",
									"",
									"    pm.environment.set('place_id', response.places[0].id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"placeInput\": {\n        \"name\": \"Brig\"\n    },\n    \"restrictions\": {\n        \"type\": \"STOP\",\n        \"usage\": \"ORIGIN\",\n        \"numberOfResults\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/places",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"places"
							]
						}
					},
					"response": []
				},
				{
					"name": "Places/{id}",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/places/{{place_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"places",
								"{{place_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get travel offers - with admission",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"pm.test(\"Trip offers contains offers\", function () {",
									"    let response = pm.response.json();",
									"    let offersReturned = false;",
									"    response.tripOffers.some(function(tripOffer) {",
									"        if (tripOffer.offers.length > 0) {",
									"            offersReturned = true;",
									"            return;",
									"        }",
									"    });",
									"",
									"    pm.expect(offersReturned).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"departureTime\": \"{{departure_timestamp}}\",\n        \"origin\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n            \"name\": \"8400058\"\n        },\n        \"destination\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n            \"name\": \"8727100\"\n        }\n    },\n    \"passengerSpecifications\": [\n        {\n        \"externalRef\": \"my-ref\",\n        \"type\": \"PERSON\",\n        \"dateOfBirth\": \"1970-01-01\",\n        \"cards\": []\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get travel offers - with fare with reservation",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"pm.test(\"Trip offers contains reservation\", function () {",
									"    let response = pm.response.json();",
									"    let reservationsReturned = false;",
									"    response.tripOffers.some(function(tripOffer) {",
									"        tripOffer.offers.some(function(offer) {",
									"            if (offer.reservations !== undefined && offer.reservations.length > 0) {",
									"                reservationsReturned = true;",
									"                return;",
									"            }",
									"        });",
									"    });",
									"",
									"    pm.expect(reservationsReturned).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"departureTime\": \"{{departure_timestamp}}\",\n        \"origin\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n            \"name\": \"8400058\"\n        },\n        \"destination\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n            \"name\": \"8727100\"\n        }\n    },\n    \"passengerSpecifications\": [\n        {\n        \"externalRef\": \"my-ref\",\n        \"type\": \"PERSON\",\n        \"dateOfBirth\": \"1970-01-01\",\n        \"cards\": []\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get travel offers - with one adult",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"departureTime\": \"{{departure_timestamp}}\",\n        \"origin\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n            \"name\": \"8400058\"\n        },\n        \"destination\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n            \"name\": \"8727100\"\n        }\n    },\n    \"passengerSpecifications\": [\n        {\n        \"externalRef\": \"my-ref\",\n        \"type\": \"PERSON\",\n        \"dateOfBirth\": \"1970-01-01\",\n        \"cards\": []\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get travel offers - for top comfort class",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"pm.test(\"Only comfort class FIRST is returned\", function () {",
									"    let response = pm.response.json();",
									"    let firstOnly = true;",
									"    response.tripOffers.some(function(tripOffer) {",
									"        tripOffer.offers.some(function(offer) {",
									"            if (offer.offerSummary.overallComfortClass !== undefined && offer.offerSummary.overallComfortClass !== 'FIRST') {",
									"                firstOnly = false;",
									"                return;",
									"            }",
									"        });",
									"    });",
									"",
									"    pm.expect(firstOnly).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"departureTime\": \"{{departure_timestamp}}\",\n        \"origin\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n            \"name\": \"8400058\"\n        },\n        \"destination\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n            \"name\": \"8727100\"\n        }\n    },\n    \"passengerSpecifications\": [\n        {\n        \"externalRef\": \"my-ref\",\n        \"type\": \"PERSON\",\n        \"dateOfBirth\": \"1970-01-01\",\n        \"cards\": []\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"comfortClasses\": [\n            \"FIRST\"\n        ],\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get travel offers - with sub-comfort class",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"pm.test(\"Only comfort class FIRST is returned\", function () {",
									"    let response = pm.response.json();",
									"    let hasServiceClass = true;",
									"    response.tripOffers.some(function(tripOffer) {",
									"        tripOffer.offers.some(function(offer) {",
									"            if (offer.offerSummary.overallServiceClass !== undefined) {",
									"                hasServiceClass = false;",
									"                return;",
									"            }",
									"        });",
									"    });",
									"",
									"    pm.expect(hasServiceClass).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"departureTime\": \"{{departure_timestamp}}\",\n        \"origin\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n            \"name\": \"8400058\"\n        },\n        \"destination\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n            \"name\": \"8727100\"\n        }\n    },\n    \"passengerSpecifications\": [\n        {\n        \"externalRef\": \"my-ref\",\n        \"type\": \"PERSON\",\n        \"dateOfBirth\": \"1970-01-01\",\n        \"cards\": []\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"comfortClasses\": [\n            \"FIRST\"\n        ]\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get travel offers - with several adults",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"pm.test(\"More than 1 passengers are returned\", function () {",
									"    let response = pm.response.json();",
									"    let hasMultiplePassengers = true;",
									"    response.tripOffers.some(function(tripOffer) {",
									"        if (tripOffer.passengers < 2) {",
									"            hasMultiplePassengers = false;",
									"            return;",
									"        }",
									"    });",
									"",
									"    pm.expect(hasMultiplePassengers).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"departureTime\": \"{{departure_timestamp}}\",\n        \"origin\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n            \"name\": \"8400058\"\n        },\n        \"destination\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n            \"name\": \"8727100\"\n        }\n    },\n    \"passengerSpecifications\": [\n        {\n            \"abstract\": \"John, Doe\",\n            \"externalReference\": \"my-ref\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"cards\": [],\n            \"gender\": \"MALE\"\n        },\n        {\n            \"abstract\": \"Mary, Doe\",\n            \"externalReference\": \"my-ref\",\n            \"dateOfBirth\": \"1972-09-03\",\n            \"cards\": [],\n            \"gender\": \"FEMALE\"\n        },\n        {\n            \"abstract\": \"Jane, Doe\",\n            \"externalReference\": \"my-ref\",\n            \"dateOfBirth\": \"1975-11-20\",\n            \"cards\": [],\n            \"gender\": \"FEMALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"comfortClasses\": [\n            \"FIRST\"\n        ],\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get travel offers - with a mix of passengers",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"pm.test(\"More than 1 passengers are returned\", function () {",
									"    let response = pm.response.json();",
									"    let hasMultiplePassengers = true;",
									"    response.tripOffers.some(function(tripOffer) {",
									"        if (tripOffer.passengers < 2) {",
									"            hasMultiplePassengers = false;",
									"            return;",
									"        }",
									"    });",
									"",
									"    pm.expect(hasMultiplePassengers).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"departureTime\": \"{{departure_timestamp}}\",\n        \"origin\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n            \"name\": \"8400058\"\n        },\n        \"destination\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n            \"name\": \"8727100\"\n        }\n    },\n    \"passengerSpecifications\": [\n        {\n            \"abstract\": \"John, Doe\",\n            \"externalReference\": \"my-ref\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"cards\": [],\n            \"gender\": \"MALE\"\n        },\n        {\n            \"abstract\": \"Mary, Doe\",\n            \"externalReference\": \"my-ref\",\n            \"dateOfBirth\": \"2015-09-03\",\n            \"cards\": [],\n            \"gender\": \"FEMALE\"\n        },\n        {\n            \"abstract\": \"Jane, Doe\",\n            \"externalReference\": \"my-ref\",\n            \"dateOfBirth\": \"2018-11-20\",\n            \"cards\": [],\n            \"gender\": \"FEMALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"comfortClasses\": [\n            \"FIRST\"\n        ],\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get a non-trip offer - regional",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(12).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"searchTags\": [\n        \"string\"\n    ],\n    \"nutsCodes\": [\n        \"string\"\n    ],\n    \"origin\": {\n        \"placeRefType\": \"stopPlaceRef\",\n        \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n        \"name\": \"8400058\"\n    },\n    \"destination\": {\n        \"placeRefType\": \"stopPlaceRef\",\n        \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n        \"name\": \"8727100\"\n    },\n    \"travelPeriods\": [\n        \"{{departure_timestamp}}\"\n    ],\n    \"passengerSpecifications\": [\n        {\n            \"externalRef\": \"my-ref\",\n            \"type\": \"PERSON\",\n            \"dateOfBirth\": \"1970-01-01\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers-collection"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reload existing trips collection",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trips-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(12).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip collection is returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.id).not.to.be.undefined;",
									"",
									"    pm.environment.set('trip_collection_id', response.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"departureTime\": \"{{departure_timestamp}}\",\n    \"origin\": {\n        \"placeRefType\": \"stopPlaceRef\",\n        \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n        \"name\": \"8400058\"\n    },\n    \"destination\": {\n        \"placeRefType\": \"stopPlaceRef\",\n        \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n        \"name\": \"8727100\"\n    },\n    \"params\": {\n        \"dataFilter\": {\n            \"ptModeFilter\": {\n                \"exclude\": true,\n                \"ptMode\": []\n            },\n            \"carrierFilter\": {\n                \"exclude\": true,\n                \"carrier\": []\n            },\n            \"serviceBrandFilter\": {\n                \"exclude\": true,\n                \"serviceBrands\": [\n                    \"OSDM_HS\"\n                ]\n            },\n            \"vehicleFilter\": {\n                \"exclude\": true,\n                \"vehicleNumbers\": [\n                    \"string\"\n                ],\n                \"vehicleLines\": [\n                    \"string\"\n                ]\n            }\n        },\n        \"policyFilter\": {\n            \"noSingleStep\": false,\n            \"noSight\": false\n        },\n        \"mobilityFlter\": {\n            \"bikeTransport\": false,\n            \"walkSpeed\": 100,\n            \"additionalTransferTime\": \"0S\"\n        },\n        \"numberOfResults\": 5,\n        \"numberOfResultsBefore\": 0,\n        \"numberOfResultsAfter\": 5,\n        \"ignoreRealtimeData\": false,\n        \"transferLimit\": 0,\n        \"itModesToCover\": \"WALK\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trips-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trips-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trips-collection/{id}",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(12).format('{yyyy}-{MM}-{dd}T07:00:00Z'));",
									"pm.environment.set('return_timestamp', new Date().addDays(8).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip collection ID equals request\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(pm.environment.get('trip_collection_id')).to.be.eq(response.id);",
									"",
									"    pm.environment.set('trip_id', response.trips[0].id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/trips-collection/{{trip_collection_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trips-collection",
								"{{trip_collection_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trips/{id}",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(12).format('{yyyy}-{MM}-{dd}T07:00:00Z'));",
									"pm.environment.set('return_timestamp', new Date().addDays(8).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip ID equals request\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(pm.environment.get('trip_id')).to.be.eq(response.trip.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/trips/{{trip_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trips",
								"{{trip_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Successful booking - with optional ancillaries",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                let reservationPassengers = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    reservationPassengers.push('\"' + reservation.commonOfferPartAttributes.passengerIds + '\"');",
									"                    reservations.push(`\"` + reservation.id + `\"`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                let ancillaryPassengers = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        ancillaryPassengers.push('\"' + ancillary.commonOfferPartAttributes.passengerIds + '\"');",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                \"` + ancillary.commonOfferPartAttributes.passengerIds + `\"",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"externalRef\": \"external_reference\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"departureTime\": \"{{departure_timestamp}}\",\n        \"origin\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n            \"name\": \"8400058\"\n        },\n        \"destination\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n            \"name\": \"8727100\"\n        }\n    },\n    \"passengerSpecifications\": [\n        {\n            \"externalRef\": \"my-ref\",\n            \"type\": \"PERSON\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"cards\": []\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('booking_id', pm.response.json().booking.id);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"offers\": [\n        {\n            \"id\": \"{{selected_offer_id}}\",\n            \"optionalReservationIds\": [],\n            \"optionalAncillaryIds\": [\n                {{selected_ancillaries}}\n            ],\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/fulfillments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Fulfillments are fulfilled\", function () {",
									"    let response = pm.response.json();",
									"    let fulfilled = true;",
									"    response.fulfillments.some(function(fulfillment) {",
									"        if (fulfillment.status !== 'FULFILLED') {",
									"            fulfilled = false;",
									"            return;",
									"        }",
									"    });",
									"",
									"    pm.expect(fulfilled).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/fulfillments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"fulfillments"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Successful booking - with seat reservation - exact",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                let reservationPassengers = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    reservationPassengers.push('\"' + reservation.commonOfferPartAttributes.passengerIds + '\"');",
									"                    reservations.push(`\"` + reservation.id + `\"`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                let ancillaryPassengers = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        ancillaryPassengers.push('\"' + ancillary.commonOfferPartAttributes.passengerIds + '\"');",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"externalReference\": \"external_reference\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"departureTime\": \"{{departure_timestamp}}\",\n        \"origin\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n            \"name\": \"8400058\"\n        },\n        \"destination\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n            \"name\": \"8727100\"\n        }\n    },\n    \"passengerSpecifications\": [\n        {\n            \"abstract\": \"Mary, Doe\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"FEMALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let passengerId = JSON.parse(pm.environment.get('passengers')).id;",
									"pm.environment.set('first_passenger_id', passengerId);",
									"",
									"let reservationId = JSON.parse(pm.environment.get('selected_reservation')).reservationId;",
									"pm.environment.set('selected_reservation_id', reservationId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('booking_id', pm.response.json().booking.id);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"purchaser\": {\n        \"externalRef\": \"external-reference-0001\",\n        \"details\": {\n            \"firstName\": \"John\",\n            \"lastName\": \"Booker\"\n        }\n    },\n    \"offers\": [\n        {\n            \"id\": \"{{selected_offer_id}}\",\n            \"optionalReservationIds\": [\n                {{selected_reservation}}\n            ],\n            \"optionalAncillaryIds\": [\n                {{selected_ancillaries}}\n            ],\n            \"passengers\": [\n                {{passengers}}\n            ],\n            \"placeSelections\": {\n                \"reservationId\": {{selected_reservation}},\n                \"placeSelection\": {\n                    \"referencePlace\": {\n                        \"placeNumber\": \"24\",\n                        \"coachNumber\": \"6\"\n                    }\n                }\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/fulfillments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Fulfillments are fulfilled\", function () {",
									"    let response = pm.response.json();",
									"    let fulfilled = true;",
									"    response.fulfillments.some(function(fulfillment) {",
									"        if (fulfillment.status !== 'FULFILLED') {",
									"            fulfilled = false;",
									"            return;",
									"        }",
									"    });",
									"",
									"    pm.expect(fulfilled).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/fulfillments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"fulfillments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking status is CONFIRMED\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking.status).to.be.eq('CONFIRMED');",
									"});",
									"",
									"pm.test(\"Provisional price is 0\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking.provisionalPrice.amount).to.be.eq(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Successful booking - with seat reservation - nearby",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                let reservationPassengers = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    reservationPassengers.push('\"' + reservation.commonOfferPartAttributes.passengerIds + '\"');",
									"                    reservations.push(`\"` + reservation.id + `\"`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                let ancillaryPassengers = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        ancillaryPassengers.push('\"' + ancillary.commonOfferPartAttributes.passengerIds + '\"');",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"externalReference\": \"external_reference\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"departureTime\": \"{{departure_timestamp}}\",\n        \"origin\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n            \"name\": \"8400058\"\n        },\n        \"destination\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n            \"name\": \"8727100\"\n        }\n    },\n    \"passengerSpecifications\": [\n        {\n            \"abstract\": \"Mary, Doe\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"FEMALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let passengerId = JSON.parse(pm.environment.get('passengers')).id;",
									"pm.environment.set('first_passenger_id', passengerId);",
									"",
									"let reservationId = JSON.parse(pm.environment.get('selected_reservation')).reservationId;",
									"pm.environment.set('selected_reservation_id', reservationId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('booking_id', pm.response.json().booking.id);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"purchaser\": {\n        \"externalRef\": \"external-reference-0001\",\n        \"details\": {\n            \"firstName\": \"John\",\n            \"lastName\": \"Booker\"\n        }\n    },\n    \"offers\": [\n        {\n            \"id\": \"{{selected_offer_id}}\",\n            \"optionalReservationIds\": [\n                {{selected_reservation}}\n            ],\n            \"optionalAncillaryIds\": [\n                {{selected_ancillaries}}\n            ],\n            \"passengers\": [\n                {{passengers}}\n            ],\n            \"placeSelections\": {\n                \"reservationId\": {{selected_reservation}},\n                \"placeSelection\": {\n                    \"referencePlace\": {\n                        \"placeNumber\": \"15\",\n                        \"coachNumber\": \"3\"\n                    }\n                }\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/fulfillments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Fulfillments are fulfilled\", function () {",
									"    let response = pm.response.json();",
									"    let fulfilled = true;",
									"    response.fulfillments.some(function(fulfillment) {",
									"        if (fulfillment.status !== 'FULFILLED') {",
									"            fulfilled = false;",
									"            return;",
									"        }",
									"    });",
									"",
									"    pm.expect(fulfilled).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/fulfillments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"fulfillments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking status is CONFIRMED\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking.status).to.be.eq('CONFIRMED');",
									"});",
									"",
									"pm.test(\"Provisional price is 0\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking.provisionalPrice.amount).to.be.eq(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Successful booking - with all passenger details",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                let reservationPassengers = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    reservationPassengers.push('\"' + reservation.commonOfferPartAttributes.passengerIds + '\"');",
									"                    reservations.push(`\"` + reservation.id + `\"`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                let ancillaryPassengers = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        ancillaryPassengers.push('\"' + ancillary.commonOfferPartAttributes.passengerIds + '\"');",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"externalReference\": \"external_reference\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"departureTime\": \"{{departure_timestamp}}\",\n        \"origin\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n            \"name\": \"8400058\"\n        },\n        \"destination\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n            \"name\": \"8727100\"\n        }\n    },\n    \"passengerSpecifications\": [\n        {\n            \"abstract\": \"Mary, Doe\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"FEMALE\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking is created\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking).not.to.be.empty;",
									"",
									"    pm.environment.set('booking_id', pm.response.json().booking.id);",
									"});",
									"",
									"pm.environment.set('passenger_id', pm.response.json().booking.passengers[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"offers\": [\n        {\n            \"id\": \"{{selected_offer_id}}\",\n            \"optionalReservationIds\": [\n                {{selected_reservation}}\n            ],\n            \"optionalAncillaryIds\": [\n                {{selected_ancillaries}}\n            ],\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/passenger/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{passenger_id}}\",\n    \"abstract\": \"Jane Doe\",\n    \"externalRef\": \"50399496\",\n    \"dateOfBirth\": \"1970-03-18\",\n    \"gender\": \"FEMALE\",\n    \"details\": {\n        \"firstName\": \"Jane\",\n        \"lastName\": \"Doe\",\n        \"eMail\": \"jane.doe@example.com\",\n        \"phoneNumber\": \"+31123456789\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/passengers/{{passenger_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"passengers",
								"{{passenger_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/fulfillments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Fulfillments are fulfilled\", function () {",
									"    let response = pm.response.json();",
									"    let fulfilled = true;",
									"    response.fulfillments.some(function(fulfillment) {",
									"        if (fulfillment.status !== 'FULFILLED') {",
									"            fulfilled = false;",
									"            return;",
									"        }",
									"    });",
									"",
									"    pm.expect(fulfilled).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/fulfillments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"fulfillments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking status is CONFIRMED\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking.status).to.be.eq('CONFIRMED');",
									"});",
									"",
									"pm.test(\"Provisional price is 0\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking.provisionalPrice.amount).to.be.eq(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Unsuccessful booking - bad passenger structure",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                let reservationPassengers = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    reservationPassengers.push('\"' + reservation.commonOfferPartAttributes.passengerIds + '\"');",
									"                    reservations.push(`\"` + reservation.id + `\"`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                let ancillaryPassengers = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        ancillaryPassengers.push('\"' + ancillary.commonOfferPartAttributes.passengerIds + '\"');",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"dateOfBirth_invalid\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"departureTime\": \"{{departure_timestamp}}\",\n        \"origin\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n            \"name\": \"8400058\"\n        },\n        \"destination\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n            \"name\": \"8727100\"\n        }\n    },\n    \"passengerSpecifications\": [\n        {\n            \"abstract\": \"Mary, Doe\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"FEMALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"selectedOffers\": [\n        {\n            \"selectedOfferId\": \"{{selected_offer_id}}\",\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Unsuccessful booking - offer not available anymore",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"offers\": [\n        {\n            \"id\": \"O_eyJvaWQiOiJUX09EUXdNREExT0h3NE56STNNVEF3ZkRJd01qRXdOVEUzTURjd01EQXdmSHhQVTBSTmZERTVOekF3TVRBeFFIeEZWVko4ZkU5VFJFMWZNVEV6ZkE9PSIsImJpZCI6IjJNRUR8ODAiLCJiaCI6W3siYiI6Im91dGJvdW5kIiwibyI6Ijg0MDAwNTgiLCJkIjoiODcyNzEwMCIsImR0IjoiMjAyMTA1MTcxOTAwMDAiLCJzbiI6Ik9TRE1fMTEzIiwic2kiOiIwOlJ8T1NETV8xMTN8T1NETV9IU3wyMDIxLTA1LTE3IiwiaSI6W3sidGMiOiJBQkNEIiwicGkiOiJwYXNzZW5nZXJfMSJ9XSwiY3UiOiJFVVIifV19\",\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Retreive existing booking - in full + granular",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                let reservationPassengers = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    reservationPassengers.push('\"' + reservation.commonOfferPartAttributes.passengerIds + '\"');",
									"                    reservations.push(`\"` + reservation.id + `\"`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                let ancillaryPassengers = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        ancillaryPassengers.push('\"' + ancillary.commonOfferPartAttributes.passengerIds + '\"');",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"departureTime\": \"{{departure_timestamp}}\",\n        \"origin\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n            \"name\": \"8400058\"\n        },\n        \"destination\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n            \"name\": \"8727100\"\n        }\n    },\n    \"passengerSpecifications\": [\n        {\n            \"abstract\": \"Mary, Doe\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"FEMALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking is created\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking).not.to.be.empty;",
									"",
									"    pm.environment.set('booking_id', pm.response.json().booking.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"offers\": [\n        {\n            \"id\": \"{{selected_offer_id}}\",\n            \"optionalAncillaryIds\": [\n                {{selected_ancillaries}}\n            ],\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ],\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/fulfillments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Fulfillments are fulfilled\", function () {",
									"    let response = pm.response.json();",
									"    let fulfilled = true;",
									"    response.fulfillments.some(function(fulfillment) {",
									"        if (fulfillment.status !== 'FULFILLED') {",
									"            fulfilled = false;",
									"            return;",
									"        }",
									"    });",
									"",
									"    pm.expect(fulfilled).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/fulfillments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"fulfillments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking status is CONFIRMED\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking.status).to.be.eq('CONFIRMED');",
									"});",
									"",
									"pm.test(\"Provisional price is 0\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking.provisionalPrice.amount).to.be.eq(0);",
									"});",
									"",
									"pm.test(\"BookedOffers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking.bookedOffers).not.to.be.undefined;",
									"});",
									"",
									"pm.test(\"Passengers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking.passengers).not.to.be.undefined;",
									"});",
									"",
									"pm.test(\"Tickets are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking.fulfillments).not.to.be.undefined;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}?embed[]=BOOKEDOFFERS&embed[]=PASSENGERS&embed[]=TICKETS",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}"
							],
							"query": [
								{
									"key": "embed[]",
									"value": "NONE",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "BOOKEDOFFERS"
								},
								{
									"key": "embed[]",
									"value": "PASSENGERS"
								},
								{
									"key": "embed[]",
									"value": "BOOKEDOFFERS.OFFERPARTS",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "ALL",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "TICKETS"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get passenger details",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                let reservationPassengers = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    reservationPassengers.push('\"' + reservation.commonOfferPartAttributes.passengerIds + '\"');",
									"                    reservations.push(`\"` + reservation.id + `\"`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                let ancillaryPassengers = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        ancillaryPassengers.push('\"' + ancillary.commonOfferPartAttributes.passengerIds + '\"');",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"departureTime\": \"{{departure_timestamp}}\",\n        \"origin\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n            \"name\": \"8400058\"\n        },\n        \"destination\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n            \"name\": \"8727100\"\n        }\n    },\n    \"passengerSpecifications\": [\n        {\n            \"abstract\": \"Mary, Doe\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"FEMALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking is created\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking).not.to.be.empty;",
									"",
									"    pm.environment.set('booking_id', pm.response.json().booking.id);",
									"});",
									"",
									"pm.environment.set('passenger_id', pm.response.json().booking.passengers[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"offers\": [\n        {\n            \"id\": \"{{selected_offer_id}}\",\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ],\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/passenger/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/passengers/{{passenger_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"passengers",
								"{{passenger_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update passengers - valid change",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                let reservationPassengers = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    reservationPassengers.push('\"' + reservation.commonOfferPartAttributes.passengerIds + '\"');",
									"                    reservations.push(`\"` + reservation.id + `\"`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                let ancillaryPassengers = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        ancillaryPassengers.push('\"' + ancillary.commonOfferPartAttributes.passengerIds + '\"');",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"departureTime\": \"{{departure_timestamp}}\",\n        \"origin\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n            \"name\": \"8400058\"\n        },\n        \"destination\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n            \"name\": \"8727100\"\n        }\n    },\n    \"passengerSpecifications\": [\n        {\n            \"abstract\": \"Mary, Doe\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"FEMALE\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking is created\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking).not.to.be.empty;",
									"",
									"    pm.environment.set('booking_id', pm.response.json().booking.id);",
									"});",
									"",
									"pm.environment.set('passenger_id', pm.response.json().booking.passengers[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"offers\": [\n        {\n            \"id\": \"{{selected_offer_id}}\",\n            \"optionalAncillaryIds\": [\n                {{selected_ancillaries}}\n            ],\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ],\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/passenger/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{passenger_id}}\",\n    \"abstract\": \"Doe, Jane\",\n    \"externalRef\": \"ext_reference_id\",\n    \"dateOfBirth\": \"1980-03-18\",\n    \"gender\": \"FEMALE\",\n    \"details\": {\n        \"firstName\": \"Jane\",\n        \"lastName\": \"Doe\",\n        \"eMail\": \"jane.doe@example.com\",\n        \"phoneNumber\": \"+31123456789\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/passengers/{{passenger_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"passengers",
								"{{passenger_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/passenger/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/passengers/{{passenger_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"passengers",
								"{{passenger_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update passengers - invalid update",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                let reservationPassengers = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    reservationPassengers.push('\"' + reservation.commonOfferPartAttributes.passengerIds + '\"');",
									"                    reservations.push(`\"` + reservation.id + `\"`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                let ancillaryPassengers = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        ancillaryPassengers.push('\"' + ancillary.commonOfferPartAttributes.passengerIds + '\"');",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"departureTime\": \"{{departure_timestamp}}\",\n        \"origin\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n            \"name\": \"8400058\"\n        },\n        \"destination\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n            \"name\": \"8727100\"\n        }\n    },\n    \"passengerSpecifications\": [\n        {\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"FEMALE\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking is created\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking).not.to.be.empty;",
									"",
									"    pm.environment.set('booking_id', pm.response.json().booking.id);",
									"});",
									"",
									"pm.environment.set('passenger_id', pm.response.json().booking.passengers[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"offers\": [\n        {\n            \"id\": \"{{selected_offer_id}}\",\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/passenger/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{passenger_id}}\",\n    \"abstract\": \"Doe, Jane\",\n    \"dateOfBirth\": \"ZZZZ-01-01\",\n    \"gender\": \"MAN\",\n    \"details\": {\n        \"firstName\": \"Jane\",\n        \"lastName\": \"Doe\",\n        \"eMail\": \"jane.doe@invalid@example.com\",\n        \"phoneNumber\": \"+31123456789\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/passengers/{{passenger_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"passengers",
								"{{passenger_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/passenger/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/passengers/{{passenger_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"passengers",
								"{{passenger_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cancel booking",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                let reservationPassengers = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    reservationPassengers.push('\"' + reservation.commonOfferPartAttributes.passengerIds + '\"');",
									"                    reservations.push(`\"` + reservation.id + `\"`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                let ancillaryPassengers = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        ancillaryPassengers.push('\"' + ancillary.commonOfferPartAttributes.passengerIds + '\"');",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"departureTime\": \"{{departure_timestamp}}\",\n        \"origin\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n            \"name\": \"8400058\"\n        },\n        \"destination\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n            \"name\": \"8727100\"\n        }\n    },\n    \"passengerSpecifications\": [\n        {\n            \"abstract\": \"Mary, Doe\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"FEMALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking is created\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking).not.to.be.empty;",
									"",
									"    pm.environment.set('booking_id', pm.response.json().booking.id);",
									"});",
									"",
									"pm.environment.set('passenger_id', pm.response.json().booking.passengers[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"purchaser\": {\n        \"details\": {\n            \"firstName\": \"John\",\n            \"lastName\": \"Booker\"\n        }\n    },\n    \"offers\": [\n        {\n            \"id\": \"{{selected_offer_id}}\",\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/fulfillments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Fulfillements are FULFILLED\", function () {",
									"    let response = pm.response.json();",
									"",
									"    pm.expect(response.fulfillments).to.be.not.empty;",
									"",
									"    let fulfillments = [];",
									"    response.fulfillments.forEach(function(fulfillment) {",
									"        pm.expect(fulfillment.status).to.be.eq('FULFILLED');",
									"",
									"        fulfillments.push('\"' + fulfillment.id + '\"');",
									"    });",
									"    pm.environment.set('fulfillments', fulfillments);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/fulfillments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"fulfillments"
							]
						}
					},
					"response": []
				},
				{
					"name": "RefundOffers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('refund_timestamp', new Date().format('{yyyy}-{MM}-{dd}T{hh}:{mm}:{ss}Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has a refundOfferId\", function () {",
									"    pm.expect(pm.response.json().refundOffers).to.not.be.empty;",
									"",
									"    pm.environment.set('refund_id', pm.response.json().refundOffers[0].id);",
									"});",
									"",
									"pm.test(\"Fulfillements are PROPOSED\", function () {",
									"    let response = pm.response.json();",
									"",
									"    let fulfillments = pm.environment.get('fulfillments');",
									"    let fulfillmentsRefundProposed = true",
									"",
									"    response.refundOffers.forEach(function(refundOffer) {",
									"        if (refundOffer.status !== 'PROPOSED') {",
									"            fulfillmentsRefundProposed = false;",
									"            return;",
									"        }",
									"    });",
									"",
									"    pm.expect(fulfillmentsRefundProposed).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fulfillmentIds\": [\n        {{fulfillments}}\n    ],\n    \"overruleCode\": \"PAYMENT_FAILURE\",\n    \"refundDate\": \"{{refund_timestamp}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/refundOffers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"refundOffers"
							]
						}
					},
					"response": []
				},
				{
					"name": "RefundOffers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Fulfillements are REFUNDED\", function () {",
									"    let response = pm.response.json();",
									"",
									"    let fulfillments = pm.environment.get('fulfillments');",
									"    let fulfillmentsRefunded = true;",
									"",
									"    response.refundOffers[0].fulfillments.forEach(function(fulfillment) {",
									"        if (fulfillment.status !== 'REFUNDED') {",
									"            fulfillmentsRefunded = false;",
									"            return;",
									"        }",
									"    });",
									"",
									"    pm.expect(fulfillmentsRefunded).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"CONFIRMED\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/refundOffers/{{refund_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"refundOffers",
								"{{refund_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "RefundOffers (cancel already cancelled)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"CONFIRMED\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/refundOffers/{{refund_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"refundOffers",
								"{{refund_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking is cancelled\", function () {",
									"    pm.expect(pm.response.json().booking.status).to.be.eq('CANCELLED');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}?embed[]=ALL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}"
							],
							"query": [
								{
									"key": "embed[]",
									"value": "NONE",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "BOOKEDOFFERS",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "PASSENGERS",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "BOOKEDOFFERS.OFFERPARTS",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "ALL"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Patch purchaser",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                let reservationPassengers = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    reservationPassengers.push('\"' + reservation.commonOfferPartAttributes.passengerIds + '\"');",
									"                    reservations.push(`\"` + reservation.id + `\"`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                let ancillaryPassengers = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        ancillaryPassengers.push('\"' + ancillary.commonOfferPartAttributes.passengerIds + '\"');",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"departureTime\": \"{{departure_timestamp}}\",\n        \"origin\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8400058\",\n            \"name\": \"8400058\"\n        },\n        \"destination\": {\n            \"placeRefType\": \"stopPlaceRef\",\n            \"stopPlaceRef\": \"urn:uic:stn:8727100\",\n            \"name\": \"8727100\"\n        }\n    },\n    \"passengerSpecifications\": [\n        {\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"FEMALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking is created\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking).not.to.be.empty;",
									"",
									"    pm.environment.set('booking_id', pm.response.json().booking.id);",
									"});",
									"",
									"pm.environment.set('passenger_id', pm.response.json().booking.passengers[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"purchaser\": {\n        \"details\": {\n            \"firstName\": \"John\",\n            \"lastName\": \"Booker\"\n        }\n    },\n    \"offers\": [\n        {\n            \"id\": \"{{selected_offer_id}}\",\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/purchaser",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('purchaser_email', 'jonh.booked@example.com');"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Purchaser updated\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.details.email).to.be.eq(pm.environment.get('purchaser_email'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"details\": {\n        \"firstName\": \"Jane\",\n        \"lastName\": \"Bookster\",\n        \"eMail\": \"{{purchaser_email}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/purchaser",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"purchaser"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/purchaser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"details\": {\n        \"firstName\": \"Jane\",\n        \"lastName\": \"Bookster\",\n        \"eMail\": \"john.booker@example.com\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/purchaser",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"purchaser"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking.purchaser).not.to.be.undefined;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}?embed[]=ALL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}"
							],
							"query": [
								{
									"key": "embed[]",
									"value": "NONE",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "BOOKEDOFFERS",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "PASSENGERS",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "BOOKEDOFFERS.OFFERPARTS",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "ALL"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}