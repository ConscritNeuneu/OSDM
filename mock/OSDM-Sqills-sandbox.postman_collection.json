{
	"info": {
		"_postman_id": "b10183f7-b95c-4d6c-ab03-c129960f9733",
		"name": "OSDM - Sqills sandbox",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Reload existing trips collection",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trips-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(12).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip collection is returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.id).not.to.be.undefined;",
									"",
									"    pm.environment.set('trip_collection_id', response.tripsCollection[0].id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8400058\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"maxChanges\": 0,\n        \"extendedChangeTime\": 0,\n        \"needsPRMAssistance\": false\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trips-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trips-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trips-collection/{id}",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(12).format('{yyyy}-{MM}-{dd}T07:00:00Z'));",
									"pm.environment.set('return_timestamp', new Date().addDays(8).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"7015400\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"viaValues\": [\n            {\n                \"codeList\": \"UIC\",\n                \"code\": \"\"\n            }\n        ],\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"maxChanges\": 0,\n        \"extendedChangeTime\": 0,\n        \"needsPRMAssistance\": false\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trips-collection/{{trip_collection_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trips-collection",
								"{{trip_collection_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get station info",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Locations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Locations are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.locations).not.to.be.undefined;",
									"",
									"    pm.environment.set('location_id', response.locations[0].id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/locations?matchValue=8727100&matchType=CODE_LIST&codeListForMatch=UIC&limit=10&embed[]=NONE",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations"
							],
							"query": [
								{
									"key": "matchValue",
									"value": "8727100"
								},
								{
									"key": "matchType",
									"value": "CODE_LIST"
								},
								{
									"key": "codeListForMatch",
									"value": "UIC"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "embed[]",
									"value": "NONE"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Locations/{id}",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/locations/{{location_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations",
								"{{location_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get station Brig",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Locations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Locations are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.locations).not.to.be.undefined;",
									"",
									"    pm.environment.set('location_id', response.locations[0].id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/locations?matchValue=8501609&matchType=CODE_LIST&codeListForMatch=UIC&limit=10&embed[]=NONE",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations"
							],
							"query": [
								{
									"key": "matchValue",
									"value": "8501609"
								},
								{
									"key": "matchType",
									"value": "CODE_LIST"
								},
								{
									"key": "codeListForMatch",
									"value": "UIC"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "embed[]",
									"value": "NONE"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Locations/{id}",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/locations/{{location_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations",
								"{{location_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get travel offers - with admission",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8400058\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ],\n        \"maxChanges\": 0,\n        \"extendedChangeTime\": 0,\n        \"needsPRMAssistance\": false\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"externalReference\": \"ext_reference\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"flexibilities\": [\n            \"FLEXI\",\n            \"SEMIFLEXI\",\n            \"NONFLEX\"\n        ],\n        \"comfortClasses\": [\n            \"FIRST\",\n            \"SECOND\"\n        ],\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get travel offers - with fare with reservation",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8400058\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ]\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"externalReference\": \"ext_reference\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get travel offers - with one adult",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8400058\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ],\n        \"maxChanges\": 0,\n        \"extendedChangeTime\": 0,\n        \"needsPRMAssistance\": false\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"externalReference\": \"ext_reference\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get travel offers - for top comfort class",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8400058\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ],\n        \"maxChanges\": 0,\n        \"extendedChangeTime\": 0,\n        \"needsPRMAssistance\": false\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"externalReference\": \"ext_reference\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"comfortClasses\": [\n            \"FIRST\"\n        ],\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get travel offers - with sub-comfort class",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8400058\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ],\n        \"maxChanges\": 0,\n        \"extendedChangeTime\": 0,\n        \"needsPRMAssistance\": false\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"externalReference\": \"ext_reference\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"comfortClasses\": [\n            \"FIRST\"\n        ],\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get travel offers - with several adults",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8400058\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ],\n        \"maxChanges\": 0,\n        \"extendedChangeTime\": 0,\n        \"needsPRMAssistance\": false\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"externalReference\": \"ext_reference\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        },\n        {\n            \"abstract\": \"Jane Doe\",\n            \"externalReference\": \"ext_reference\",\n            \"dateOfBirth\": \"1980-01-01\",\n            \"gender\": \"FEMALE\"\n        },\n        {\n            \"abstract\": \"Mary Doe\",\n            \"externalReference\": \"ext_reference\",\n            \"dateOfBirth\": \"2000-01-01\",\n            \"gender\": \"FEMALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get travel offers - with a mix of passengers",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8400058\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ],\n        \"maxChanges\": 0,\n        \"extendedChangeTime\": 0,\n        \"needsPRMAssistance\": false\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"externalReference\": \"ext_reference1\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        },\n        {\n            \"abstract\": \"Jane Doe\",\n            \"externalReference\": \"ext_reference2\",\n            \"dateOfBirth\": \"1980-01-01\",\n            \"gender\": \"FEMALE\"\n        },\n        {\n            \"abstract\": \"Mary Doe\",\n            \"externalReference\": \"ext_reference3\",\n            \"dateOfBirth\": \"2015-01-01\",\n            \"gender\": \"FEMALE\"\n        },\n        {\n            \"abstract\": \"Mike Doe\",\n            \"externalReference\": \"ext_reference4\",\n            \"dateOfBirth\": \"2018-01-01\",\n            \"gender\": \"FEMALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get a non-trip offer - regional",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Non-trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(12).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"travelPeriod\": [\n        \"{{departure_timestamp}}\"\n    ],\n    \"passengers\": [\n        {\n            \"abstract\": \"Roland Klapwijk\",\n            \"externalReference\": \"abcdef\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        }\n    ],\n    \"nonTripOfferSearchCriteria\": {\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/non-trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"non-trip-offers-collection"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Successful booking - with optional ancillaries",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    let reservationPassengers = [];",
									"                    reservation.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                        reservationPassengers.push('\"' + passenger.id + '\"');",
									"                    });",
									"",
									"                    reservations.push(`{",
									"                        \"reservationId\": \"` + reservation.id + `\",",
									"                        \"reservationIds\": [",
									"                            ` + reservationPassengers + `",
									"                        ]",
									"                    }`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        let ancillaryPassengers = [];",
									"                        ancillary.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                            ancillaryPassengers.push('\"' + passenger.id + '\"');",
									"                        });",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"externalReference\": \"external_reference\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8400058\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ]\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"externalReference\": \"ext_reference\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('booking_id', pm.response.json().booking.id);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"selectedOffers\": [\n        {\n            \"selectedOfferId\": \"{{selected_offer_id}}\",\n            \"selectedOptionalAncillaries\": [\n                {{selected_ancillaries}}\n            ],\n            \"passengers\": [\n                {{passengers}}\n            ], \n            \"placeSelections\": {\n                \"reservationId\": \"{{selected_reservation_id}}\",\n                \"placeSelection\":\n                  { \n                    \"selectedCoach\":\n                      { \n                        \"selectedCoaches\":\n                          [\n                            { \n                              \"coachNumber\": \"2\",\n                              \"selectedPlaces\":\n                                [\n                                  {\n                                    \"passengerId\": \"passengerId\",\n                                    \"place\": \"2\"\n                                  }\n                                ]\n                            }  \n                          ]\n                      }\n                  }\n            }      \n        }\n    ],\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/fulfillments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/fulfillments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"fulfillments"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Successful booking - with seat reservation - exact",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    let reservationPassengers = [];",
									"                    reservation.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                        reservationPassengers.push('\"' + passenger.id + '\"');",
									"                    });",
									"",
									"                    reservations.push(`{",
									"                        \"reservationId\": \"` + reservation.id + `\",",
									"                        \"reservationIds\": [",
									"                            ` + reservationPassengers + `",
									"                        ]",
									"                    }`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        let ancillaryPassengers = [];",
									"                        ancillary.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                            ancillaryPassengers.push('\"' + passenger.id + '\"');",
									"                        });",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"externalReference\": \"external_reference\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8500010\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8509000\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ]\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"externalReference\": \"ext_reference\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let passengerId = JSON.parse(pm.environment.get('passengers')).id;",
									"pm.environment.set('first_passenger_id', passengerId);",
									"",
									"let reservationId = JSON.parse(pm.environment.get('selected_reservation')).reservationId;",
									"pm.environment.set('selected_reservation_id', reservationId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('booking_id', pm.response.json().booking.id);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"selectedOffers\": [\n        {\n            \"selectedOfferId\": \"{{selected_offer_id}}\",\n            \"selectedOptionalReservations\": [\n                {{selected_reservation}}\n            ],\n            \"passengers\": [\n                {{passengers}}\n            ],\n            \"placeSelections\": {\n                \"reservationId\": \"{{selected_reservation_id}}\",\n                \"placeSelection\": {\n                    \"selectedCoaches\": [\n                        {\n                            \"coachNumber\": \"1\",\n                            \"selectedPlaces\": [\n                                {\n                                    \"passengerId\": \"{{first_passenger_id}}\",\n                                    \"placeNumber\": \"24\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/fulfillments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/fulfillments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"fulfillments"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Successful booking - with seat reservation - nearby",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    let reservationPassengers = [];",
									"                    reservation.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                        reservationPassengers.push('\"' + passenger.id + '\"');",
									"                    });",
									"",
									"                    reservations.push(`{",
									"                        \"reservationId\": \"` + reservation.id + `\",",
									"                        \"reservationIds\": [",
									"                            ` + reservationPassengers + `",
									"                        ]",
									"                    }`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        let ancillaryPassengers = [];",
									"                        ancillary.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                            ancillaryPassengers.push('\"' + passenger.id + '\"');",
									"                        });",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"externalReference\": \"external_reference\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8500010\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8509000\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ]\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"externalReference\": \"ext_reference\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let passengerId = JSON.parse(pm.environment.get('passengers')).id;",
									"pm.environment.set('first_passenger_id', passengerId);",
									"",
									"let reservationId = JSON.parse(pm.environment.get('selected_reservation')).reservationId;",
									"pm.environment.set('selected_reservation_id', reservationId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('booking_id', pm.response.json().booking.id);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"selectedOffers\": [\n        {\n            \"selectedOfferId\": \"{{selected_offer_id}}\",\n            \"selectedOptionalReservations\": [\n                {{selected_reservation}}\n            ],\n            \"passengers\": [\n                {{passengers}}\n            ],\n            \"placeSelections\": {\n                \"reservationId\": \"{{selected_reservation_id}}\",\n                \"placeSelection\": {\n                    \"referencePlace\": {\n                        \"placeNumber\": \"20\",\n                        \"coachNumber\": \"1\"\n                    },\n                    \"selectedOptions\": [\n                        {\n                            \"passengerIds\": [\n                                \"{{first_passenger_id}}\"\n                            ],\n                            \"selectedPlaceProperties\": [\n                                \"WINDOW\", \"AISLE\", \"CLUB_2\"\n                            ]\n                        }\n                    ]\n                }\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/fulfillments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/fulfillments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"fulfillments"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Successful booking - with all passenger details",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    let reservationPassengers = [];",
									"                    reservation.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                        reservationPassengers.push('\"' + passenger.id + '\"');",
									"                    });",
									"",
									"                    reservations.push(`{",
									"                        \"reservationId\": \"` + reservation.id + `\",",
									"                        \"reservationIds\": [",
									"                            ` + reservationPassengers + `",
									"                        ]",
									"                    }`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        let ancillaryPassengers = [];",
									"                        ancillary.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                            ancillaryPassengers.push('\"' + passenger.id + '\"');",
									"                        });",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"externalReference\": \"external_reference\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8400058\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ]\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"reference\": \"ext_reference\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking is created\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking).not.to.be.empty;",
									"",
									"    pm.environment.set('booking_id', pm.response.json().booking.id);",
									"});",
									"",
									"pm.environment.set('passenger_id', pm.response.json().booking.passengers[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"selectedOffers\": [\n        {\n            \"selectedOfferId\": \"{{selected_offer_id}}\",\n            \"selectedOptionalAncillaries\": [\n                {{selected_ancillaries}}\n            ],\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ],\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/passenger/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{passenger_id}}\",\n    \"abstract\": \"Doe, Jane\",\n    \"externalReference\": \"ext_reference_id\",\n    \"dateOfBirth\": \"1980-03-18\",\n    \"gender\": \"FEMALE\",\n    \"details\": {\n        \"firstName\": \"Jane\",\n        \"lastName\": \"Doe\",\n        \"eMail\": \"jane.doe@example.com\",\n        \"phoneNumber\": \"+31123456789\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/passengers/{{passenger_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"passengers",
								"{{passenger_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/fulfillments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/fulfillments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"fulfillments"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Unsuccessful booking - bad passenger structure",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    let reservationPassengers = [];",
									"                    reservation.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                        reservationPassengers.push('\"' + passenger.id + '\"');",
									"                    });",
									"",
									"                    reservations.push(`{",
									"                        \"reservationId\": \"` + reservation.id + `\",",
									"                        \"reservationIds\": [",
									"                            ` + reservationPassengers + `",
									"                        ]",
									"                    }`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        let ancillaryPassengers = [];",
									"                        ancillary.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                            ancillaryPassengers.push('\"' + passenger.id + '\"');",
									"                        });",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"externalReference\": \"external_reference\",",
									"                        \"gender\": \"invalid\",",
									"                        \"Invalid-dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8400058\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ]\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"reference\": \"ext_reference\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"selectedOffers\": [\n        {\n            \"selectedOfferId\": \"{{selected_offer_id}}\",\n            \"selectedOptionalAncillaries\": [\n                {{selected_ancillaries}}\n            ],\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ],\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Unsuccessful booking - offer not available anymore",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    let reservationPassengers = [];",
									"                    reservation.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                        reservationPassengers.push('\"' + passenger.id + '\"');",
									"                    });",
									"",
									"                    reservations.push(`{",
									"                        \"reservationId\": \"` + reservation.id + `\",",
									"                        \"reservationIds\": [",
									"                            ` + reservationPassengers + `",
									"                        ]",
									"                    }`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        let ancillaryPassengers = [];",
									"                        ancillary.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                            ancillaryPassengers.push('\"' + passenger.id + '\"');",
									"                        });",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"externalReference\": \"external_reference\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8400058\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ]\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"reference\": \"ext_reference\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"selectedOffers\": [\n        {\n            \"selectedOfferId\": \"O_eyJvaWQiOiJUX09EUXdNREExT0h3NE56STNNVEF3ZkRJd01qRXdOVEUzTURjd01EQXdmSHhQVTBSTmZERTVOekF3TVRBeFFIeEZWVko4ZkU5VFJFMWZNVEV6ZkE9PSIsImJpZCI6IjJNRUR8ODAiLCJiaCI6W3siYiI6Im91dGJvdW5kIiwibyI6Ijg0MDAwNTgiLCJkIjoiODcyNzEwMCIsImR0IjoiMjAyMTA1MTcxOTAwMDAiLCJzbiI6Ik9TRE1fMTEzIiwic2kiOiIwOlJ8T1NETV8xMTN8T1NETV9IU3wyMDIxLTA1LTE3IiwiaSI6W3sidGMiOiJBQkNEIiwicGkiOiJwYXNzZW5nZXJfMSJ9XSwiY3UiOiJFVVIifV19\",\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/fulfillments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/fulfillments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"fulfillments"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Unsuccessful booking - offer not available anymore Copy",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    let reservationPassengers = [];",
									"                    reservation.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                        reservationPassengers.push('\"' + passenger.id + '\"');",
									"                    });",
									"",
									"                    reservations.push(`{",
									"                        \"reservationId\": \"` + reservation.id + `\",",
									"                        \"reservationIds\": [",
									"                            ` + reservationPassengers + `",
									"                        ]",
									"                    }`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        let ancillaryPassengers = [];",
									"                        ancillary.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                            ancillaryPassengers.push('\"' + passenger.id + '\"');",
									"                        });",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"externalReference\": \"external_reference\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8400058\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ]\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"reference\": \"ext_reference\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"selectedOffers\": [\n        {\n            \"selectedOfferId\": \"O_eyJvaWQiOiJUX09EUXdNREExT0h3NE56STNNVEF3ZkRJd01qRXdOVEUzTURjd01EQXdmSHhQVTBSTmZERTVOekF3TVRBeFFIeEZWVko4ZkU5VFJFMWZNVEV6ZkE9PSIsImJpZCI6IjJNRUR8ODAiLCJiaCI6W3siYiI6Im91dGJvdW5kIiwibyI6Ijg0MDAwNTgiLCJkIjoiODcyNzEwMCIsImR0IjoiMjAyMTA1MTcxOTAwMDAiLCJzbiI6Ik9TRE1fMTEzIiwic2kiOiIwOlJ8T1NETV8xMTN8T1NETV9IU3wyMDIxLTA1LTE3IiwiaSI6W3sidGMiOiJBQkNEIiwicGkiOiJwYXNzZW5nZXJfMSJ9XSwiY3UiOiJFVVIifV19\",\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Retreive existing booking - in full + granular",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    let reservationPassengers = [];",
									"                    reservation.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                        reservationPassengers.push('\"' + passenger.id + '\"');",
									"                    });",
									"",
									"                    reservations.push(`{",
									"                        \"reservationId\": \"` + reservation.id + `\",",
									"                        \"reservationIds\": [",
									"                            ` + reservationPassengers + `",
									"                        ]",
									"                    }`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        let ancillaryPassengers = [];",
									"                        ancillary.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                            ancillaryPassengers.push('\"' + passenger.id + '\"');",
									"                        });",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"externalReference\": \"external_reference\",",
									"                        \"gender\": \"FEMALE\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8400058\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ]\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"reference\": \"ext_reference\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking is created\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking).not.to.be.empty;",
									"",
									"    pm.environment.set('booking_id', pm.response.json().booking.id);",
									"});",
									"",
									"pm.environment.set('passenger_id', pm.response.json().booking.passengers[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"selectedOffers\": [\n        {\n            \"selectedOfferId\": \"{{selected_offer_id}}\",\n            \"selectedOptionalAncillaries\": [\n                {{selected_ancillaries}}\n            ],\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ],\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/fulfillments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/fulfillments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"fulfillments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}?embed[]=ALL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}"
							],
							"query": [
								{
									"key": "embed[]",
									"value": "NONE",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "BOOKEDOFFERS",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "PASSENGERS",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "BOOKEDOFFERS.OFFERPARTS",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "ALL"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get passenger details",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    let reservationPassengers = [];",
									"                    reservation.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                        reservationPassengers.push('\"' + passenger.id + '\"');",
									"                    });",
									"",
									"                    reservations.push(`{",
									"                        \"reservationId\": \"` + reservation.id + `\",",
									"                        \"reservationIds\": [",
									"                            ` + reservationPassengers + `",
									"                        ]",
									"                    }`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        let ancillaryPassengers = [];",
									"                        ancillary.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                            ancillaryPassengers.push('\"' + passenger.id + '\"');",
									"                        });",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"externalReference\": \"external_reference\",",
									"                        \"gender\": \"FEMALE\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8400058\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ]\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking is created\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking).not.to.be.empty;",
									"",
									"    pm.environment.set('booking_id', pm.response.json().booking.id);",
									"});",
									"",
									"pm.environment.set('passenger_id', pm.response.json().booking.passengers[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"selectedOffers\": [\n        {\n            \"selectedOfferId\": \"{{selected_offer_id}}\",\n            \"selectedOptionalAncillaries\": [\n                {{selected_ancillaries}}\n            ],\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ],\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/passenger/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/passengers/{{passenger_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"passengers",
								"{{passenger_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update passengers - valid change",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    let reservationPassengers = [];",
									"                    reservation.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                        reservationPassengers.push('\"' + passenger.id + '\"');",
									"                    });",
									"",
									"                    reservations.push(`{",
									"                        \"reservationId\": \"` + reservation.id + `\",",
									"                        \"reservationIds\": [",
									"                            ` + reservationPassengers + `",
									"                        ]",
									"                    }`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        let ancillaryPassengers = [];",
									"                        ancillary.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                            ancillaryPassengers.push('\"' + passenger.id + '\"');",
									"                        });",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"externalReference\": \"external_reference\",",
									"                        \"gender\": \"FEMALE\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8400058\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ]\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"reference\": \"ext_reference\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking is created\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking).not.to.be.empty;",
									"",
									"    pm.environment.set('booking_id', pm.response.json().booking.id);",
									"});",
									"",
									"pm.environment.set('passenger_id', pm.response.json().booking.passengers[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"selectedOffers\": [\n        {\n            \"selectedOfferId\": \"{{selected_offer_id}}\",\n            \"selectedOptionalAncillaries\": [\n                {{selected_ancillaries}}\n            ],\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ],\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/passenger/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{passenger_id}}\",\n    \"abstract\": \"Doe, Jane\",\n    \"externalReference\": \"ext_reference_id\",\n    \"dateOfBirth\": \"1980-03-18\",\n    \"gender\": \"FEMALE\",\n    \"details\": {\n        \"firstName\": \"Jane\",\n        \"lastName\": \"Doe\",\n        \"eMail\": \"jane.doe@example.com\",\n        \"phoneNumber\": \"+31123456789\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/passengers/{{passenger_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"passengers",
								"{{passenger_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/passenger/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/passengers/{{passenger_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"passengers",
								"{{passenger_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update passengers - invalid update",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    let reservationPassengers = [];",
									"                    reservation.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                        reservationPassengers.push('\"' + passenger.id + '\"');",
									"                    });",
									"",
									"                    reservations.push(`{",
									"                        \"reservationId\": \"` + reservation.id + `\",",
									"                        \"reservationIds\": [",
									"                            ` + reservationPassengers + `",
									"                        ]",
									"                    }`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        let ancillaryPassengers = [];",
									"                        ancillary.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                            ancillaryPassengers.push('\"' + passenger.id + '\"');",
									"                        });",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"externalReference\": \"external_reference\",",
									"                        \"gender\": \"FEMALE\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8400058\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ]\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"reference\": \"ext_reference\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking is created\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking).not.to.be.empty;",
									"",
									"    pm.environment.set('booking_id', pm.response.json().booking.id);",
									"});",
									"",
									"pm.environment.set('passenger_id', pm.response.json().booking.passengers[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"selectedOffers\": [\n        {\n            \"selectedOfferId\": \"{{selected_offer_id}}\",\n            \"selectedOptionalAncillaries\": [\n                {{selected_ancillaries}}\n            ],\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ],\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/passenger/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{passenger_id}}\",\n    \"abstract\": \"Doe, Jane\",\n    \"dateOfBirth\": \"ZZZZ-01-01\",\n    \"gender\": \"MAN\",\n    \"details\": {\n        \"firstName\": \"Jane\",\n        \"lastName\": \"Doe\",\n        \"eMail\": \"jane.doe@invalid@example.com\",\n        \"phoneNumber\": \"+31123456789\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/passengers/{{passenger_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"passengers",
								"{{passenger_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/passenger/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/passengers/{{passenger_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"passengers",
								"{{passenger_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cancel booking",
			"item": [
				{
					"name": "Oauth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Access token is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.access_token !== undefined;",
									"    ",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{agent.username}}\",\n  \"password\": \"{{agent.password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/oauth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trip-offers-collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('departure_timestamp', new Date().addDays(10).format('{yyyy}-{MM}-{dd}T07:00:00Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Trip offers are returned\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.tripOffers).not.to.be.empty;",
									"});",
									"",
									"// Get the first offer returned",
									"pm.response.json().tripOffers.some(function(tripOffer) {",
									"    if (tripOffer.offers.length > 1) {",
									"",
									"        tripOffer.offers.some(function(offer) {",
									"",
									"            // let offer = tripOffer.offers[0];",
									"            if (offer.reservations !== undefined) {",
									"",
									"                pm.environment.set('selected_offer_id', offer.id);",
									"",
									"                // Add the reservations",
									"                let reservations = [];",
									"                offer.reservations.some(function(reservation) {",
									"",
									"                    let reservationPassengers = [];",
									"                    reservation.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                        reservationPassengers.push('\"' + passenger.id + '\"');",
									"                    });",
									"",
									"                    reservations.push(`{",
									"                        \"reservationId\": \"` + reservation.id + `\",",
									"                        \"reservationIds\": [",
									"                            ` + reservationPassengers + `",
									"                        ]",
									"                    }`);",
									"                });",
									"                pm.environment.set('selected_reservation', reservations);",
									"",
									"                // Add the ancillaries",
									"                let ancillaries = [];",
									"                if (offer.ancillaries !== undefined) {",
									"                    offer.ancillaries.some(function(ancillary) {",
									"",
									"                        let ancillaryPassengers = [];",
									"                        ancillary.commonOfferPartAttributes.passengerIds.forEach(function(passenger) {",
									"                            ancillaryPassengers.push('\"' + passenger.id + '\"');",
									"                        });",
									"",
									"                        ancillaries.push(`{",
									"                            \"ancillaryId\": \"` + ancillary.id + `\",",
									"                            \"passengerIds\": [",
									"                                ` + ancillaryPassengers + `",
									"                            ]",
									"                        }`);",
									"                    });",
									"                    pm.environment.set('selected_ancillaries', ancillaries);",
									"                }",
									"",
									"                // Add the passengers",
									"                let passengers = [];",
									"                tripOffer.passengers.forEach(function(passenger) {",
									"                    passengers.push(`{",
									"                        \"id\": \"` + passenger.id + `\",",
									"                        \"abstract\": \"` + passenger.abstract + `\",",
									"                        \"externalReference\": \"external_reference\",",
									"                        \"gender\": \"FEMALE\",",
									"                        \"dateOfBirth\": \"` + passenger.dateOfBirth + `\"",
									"                    }`);",
									"                });",
									"                pm.environment.set('passengers', passengers);",
									"",
									"                return;",
									"            }",
									"",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tripSearchCriteria\": {\n        \"stopBehavior\": \"ORIGIN_DESTINATION_ONLY\",\n        \"origin\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8400058\"\n        },\n        \"destination\": {\n            \"codeList\": \"UIC\",\n            \"code\": \"8727100\"\n        },\n        \"travelDateTime\": {\n            \"dateTime\": \"{{departure_timestamp}}\",\n            \"isArrival\": false\n        },\n        \"serviceBrands\": [\n            \"OSDM\"\n        ]\n    },\n    \"passengers\": [\n        {\n            \"abstract\": \"John Doe\",\n            \"reference\": \"ext_reference\",\n            \"dateOfBirth\": \"1970-01-01\",\n            \"gender\": \"MALE\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"EUR\"\n    },\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trip-offers-collection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trip-offers-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking is created\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(response.booking).not.to.be.empty;",
									"",
									"    pm.environment.set('booking_id', pm.response.json().booking.id);",
									"});",
									"",
									"pm.environment.set('passenger_id', pm.response.json().booking.passengers[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"selectedOffers\": [\n        {\n            \"selectedOfferId\": \"{{selected_offer_id}}\",\n            \"passengers\": [\n                {{passengers}}\n            ]\n        }\n    ],\n    \"embed\": [\n        \"ALL\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}/fulfillments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Fulfillements are confirmed\", function () {",
									"    let response = pm.response.json();",
									"",
									"    pm.expect(response.fulfillments).to.be.not.empty;",
									"",
									"    let fulfillments = [];",
									"    response.fulfillments.forEach(function(fulfillment) {",
									"        pm.expect(fulfillment.status).to.be.eq('FULFILLED');",
									"",
									"        fulfillments.push('\"' + fulfillment.id + '\"');",
									"    });",
									"    pm.environment.set('fulfillments', fulfillments);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/fulfillments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"fulfillments"
							]
						}
					},
					"response": []
				},
				{
					"name": "RefundOffers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('refund_timestamp', new Date().format('{yyyy}-{MM}-{dd}T{hh}:{mm}:{ss}Z'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has a refundOfferId\", function () {",
									"    pm.expect(pm.response.json().refundOffersCollection.refundOffers).to.not.be.empty;",
									"",
									"    pm.environment.set('refund_id', pm.response.json().refundOffersCollection.refundOffers[0].id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fulfillmentIds\": [\n        {{fulfillments}}\n    ],\n    \"overruleCode\": \"PAYMENT_FAILURE\",\n    \"refundDate\": \"{{refund_timestamp}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/refundOffers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"refundOffers"
							]
						}
					},
					"response": []
				},
				{
					"name": "RefundOffers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"confirmedRefundOfferId\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}/refundOffers/{{refund_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}",
								"refundOffers",
								"{{refund_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bookings/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bookings/{{booking_id}}?embed[]=ALL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings",
								"{{booking_id}}"
							],
							"query": [
								{
									"key": "embed[]",
									"value": "NONE",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "BOOKEDOFFERS",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "PASSENGERS",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "BOOKEDOFFERS.OFFERPARTS",
									"disabled": true
								},
								{
									"key": "embed[]",
									"value": "ALL"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}