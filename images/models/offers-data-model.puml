@startuml
title: Offers Data Model

class Trip <<R,Orchid>> #linen {
}

Trip *-- "1..n" TripLeg

class TripLeg <<D, Green>> #linen {
}

class TripOffer <<R,orchid>>  {
  id*
  trip*: Trip
  offers: [Offer]
  passengers: [Passenger]
}

TripOffer *-- "1..n" Offer
TripOffer *-- "1..n" Passenger
TripOffer *-- "1" Trip

class Offer <<R,orchid>> {
  id*
  abstract
  offerSummary: OfferSummary
  priceGuaranteedUntil: date
  isReusable: boolean
  offerTag
  coveredTripLegIndexes: [integer]
  returnTags: [string]
  tripTags: [string]
  appliedThroughTicketTags: [string]
  requestedInformation: string
  availableFulfillmentTypes: [FulfillmentType]
  trip: Trip
  validFrom: date
  validUntil: date
  admissions: [Admission]
  reservations: [Reservation]
  ancilliaries: [Ancillary]
  fees: [Fee]
  fares: [FareOnline]
  links: [Link]
}

Offer *-- "0..n" Admission
Offer *-- "0..n" Reservation
Offer *-- "0..n" Ancillary
Offer *-- "0..n" Fee
Offer *-- "0..n" FareOnline
Offer *-- "1" Trip
Offer *-- "1..n" FulfillmentType
Offer *-- "1" OfferSummary

class OfferSummary <<D,green>> {
  minimalPrice*: price
  overallServiceClass*: string
  overallComfortClass: FIRST/SECOND
  overallAccommodationType: string
  overallAccommodationSubType: string
  overallFlexibility*: FULLFLEX/MIDFLEX/NOFLEX
}

abstract class OfferPartReference <<C,green>> #lightgrey {
  id*
  abstract
  links: [Link]
}

OfferPartReference <|-- Admission
OfferPartReference <|-- Reservation
OfferPartReference <|-- Ancillary
OfferPartReference <|-- Fee

class CommonOfferPartAttributes {
  price*
  pricingMode: INDIVIDUAL/COLLECTIVE
  appliedReductions: [CardReference]
  appliedPromoCodes: [PromoCode]
  passengerIds*: string
  providerBookingReference: string
  finalProviderBookingReference: string
  availableFulfillmentOptions: [FulfillmentOption]
  validFrom*: date
  validUntil: date
  numericAvailability
  refundable*: YES/NO/WITH_CONDITIONS
  exchangeable*: YES/NO/WITH_CONDITIONS
  products: [Product, tripLegIndices]
}

CommonOfferPartAttributes *-- "0..n" CardReference
CommonOfferPartAttributes *-- "0..n" PromoCode
CommonOfferPartAttributes *-- "1..n" Passenger
CommonOfferPartAttributes *-- "1..n" FulfillmentOption
CommonOfferPartAttributes o-- "0..n" Product

class Ancillary <<D,green>> {
  id*
  commonOfferPartAttributes*
  optionality: INCLUDED/OPTIONAL
  category: string
  fees: [OfferPartReference]
}

Ancillary *-- "1" CommonOfferPartAttributes
Ancillary .>"0..n" Fee


class Admission <<D,green>> {
  id*
  commonOfferPartAttributes*
  isReservationRequired: boolean
  reservations: [OfferPart]
  ancilliaries: [OPTIONAL/INCLUDED, OfferPartReference]
  fees: [OfferPartReference]
}

Admission *-- "1" CommonOfferPartAttributes
Admission .>"0..n" Reservation:optional/\nincluded/\nmandatory
Admission .>"0..n" Ancillary:optional/\nincluded
Admission .>"0..n" Fee

class Reservation <<D,green>> {
  id*
  commonOfferPartAttributes*
  reservationDetails*: ReservationDetail
  placeSelection: PlaceSelection
  optionality: [INCLUDED/MANDATORY/OPTIONAL]
  ancillaries: [relationType, ancillary]
  fees: [OfferPartReference]
}

Reservation *-- "1" CommonOfferPartAttributes
Reservation *-- "1" ReservationDetail
Reservation *-- "0..1" PlaceSelection
Reservation .>"0..n" Fee
Reservation .>"0..n" Ancillary:optional/\nincluded/\nmandatory

class ReservationDetail<<D,green>> {
  accommodationType: string
  accommodationSubtype: string
  reservedPlaces: [PlacePack]
}

ReservationDetail *-- "0..n" PlacePack

class PlacePack<<D,green>> {
  id*
  passengerReferences: string
  vehicle*: string
  coach*: string
  places*: string
  placeIds: [string]
  placeProperties: [placeProperty,number,priority]
}

class PlaceSelection<<D,green>> {
  reservationOptions
  vehicle
  referencePlace
  selectedOptions
  selectedCoach
}

class Fee<<D,green>> {
  id*
  title
  price*: price
  applicability: BOOKING/TRIP/OFFERPART
  providerBookingReference: string
  refundable: YES/NO/WITH_CONDITIONS
  conditions
  productCode: string
}

Fee *-- "0..n" Condition

class Product <<R,orchid>> {
  id*
  abstract
  code
  description
  conditions: [Condition]
  serviceClass: ServiceClass
  comfortClass: FIRST/SECOND
  isTrainBound: boolean
  isReturnProduct: boolean
  fulfillmentOptions: [FulfilmentOption]
  serviceConstraintText: string
  carrierConstraintText: string
  throughTicketTags: [string]
  combinationTags
  links: [Link]
}

Product *-- "0..n" Condition
Product *-- "1..n" FulfillmentOption

class Condition<<D,green>> {
  type*: SALE/EXCHANGE/REFUND/TRAVEL
  description*: string
  validFrom: date
  validUntil: date
  afterSalesFee.feePrice: Price
  afterSalesFee.isAllocatorFee: boolean
}

class FulfillmentOption<<D,green>> {
  fulfillmentType: ETICKET/CIT_PAPER
  media
}

class Passenger <<R, orchid>> {
  id*
  abstract: string
  externalReference: string
  dateOfBirth: date
  cards: [CardReference]
  gender: MALE/FEMALE/X
  details: PersonDetail
  passport: IdentificationDocument
  transportableDetails: Transportable
  prmneeds: [PRMNeedType]
  links: [Link]
}

Passenger *-- "0..n" CardReference
Passenger *-- "0..1" PersonDetail
Passenger *-- "0..1" IdentificationDocument
Passenger *-- "0..1" Transportable

class PersonDetail<<D,green>> {
  preferredLanguage: string
  abstract: string
  firstName: string
  lastName: string
  email: string
  phoneNumber: string
  address: Address
}

class CardReference<<D,green>> {
  type*: REDUCTION/LOYALTY/BOTH
  code*: string
  codeList*: string
  name: string
  number: string
  issuer: string
}


class PromoCode<<D,green>> {
  code*: string
  issuer: string
}

class IdentificationDocument<<D,green>> {
  id*
  type*: string
  name: string
  nationality: country
  cityOfBirth: string
  cityOfIssue: string
  cityOfResidence: string
  countryOfBirth: country
  countryOfIssue: country
  countryOfResidence: country
  dateOfIssue: date
  gender: MALE/FEMALE/X
  limitOfValidity: date
}

class Transportable<<D,green>> {
  type*
  car: Car
  motorCycle: MotorCycle
  trailer: Trailer
}

class FareOnline <<D,green>> {
  id*
  type*
  name
  description
  prices: [Price]
  regionalConstraint*
  serviceConstraint
  carrierConstraint
  regulatoryConditions: CIV/MD/EU-PRR
  serviceClass
  comfortClass: FIRST/SECOND
  accommodationDetail
  afterSalesCondition*
  combinationConstraint*
  fulfillmentConstraint
  reductionConstraint
  legacyAccountingIdentifier
  travelValidityConstraint*
  reservationDetails
  placeSelection
  reservationLegacyParameter
  coveredSection
  passengerConstraints
  involvedTCOs
}
@enduml
