hide footbox

actor API_Consumer 

== Creating the trip collection & getting the initial set of outward trips ==
API_Consumer -> OSDM_Provider: POST /Trips-offers-collection <MUNCHEN-PARIS, 23/10/2021, return 25/10/2021, 2 pax, dob, ...>
OSDM_Provider -> Journey_Planner : <retrieve trips information based on API Consumer request>
Journey_Planner --> OSDM_Provider : <trips information>
OSDM_Provider -> OSDM_Provider: determine FareProvider for each segment
OSDM_Provider -> OSDM_Provider : create offer requests
loop for each request
    OSDM_Provider -> FareProvider: get offers 
    FareProvider --> OSDM_Provider : request with trips
end
OSDM_Provider -> OSDM_Provider : reconcile trips and \nconstruct global offers
OSDM_Provider --> API_Consumer: <Trips-offers-Collection with list of TripOffers scrolling tokens offerHashes combinationHashes>

== Creating the trip collection & getting the initial set of outward trips ==
opt working with offerHash to only get compatible inward offers
API_Consumer -> API_Consumer: <select outward offer or group of offers with the same offerHash>
API_Consumer -> OSDM_Provider: POST /Trips-offers-collection <MUNCHEN-PARIS, 23/10/2021, outwardOfferHash, 2 pax, dob, ...>
OSDM_Provider -> Journey_Planner : <retrieve trips information based on API Consumer request>
Journey_Planner --> OSDM_Provider : <trips information>
OSDM_Provider -> OSDM_Provider: determine FareProvider for each segment
OSDM_Provider -> OSDM_Provider : create offer requests
loop for each request
    OSDM_Provider -> FareProvider: get offers 
    FareProvider --> OSDM_Provider : request with trips
end
OSDM_Provider -> OSDM_Provider : reconcile trips and \nconstruct global offers
OSDM_Provider --> API_Consumer: <Trips-offers-Collection with list of TripOffers compatible with (set of) indicated outward Offer(s) scrolling tokens offerHashes combinationHashes>
end

opt working with combinationHashes to determine compatible offers on API_Consumer side
API_Consumer -> OSDM_Provider: POST /Trips-offers-collection <MUNCHEN-PARIS, 23/10/2021, 2 pax, dob, ...>
OSDM_Provider -> Journey_Planner : <retrieve trips information based on API Consumer request>
Journey_Planner --> OSDM_Provider : <trips information>
OSDM_Provider -> OSDM_Provider: determine FareProvider for each segment
OSDM_Provider -> OSDM_Provider : create offer requests
loop for each request
    OSDM_Provider -> FareProvider: get offers 
    FareProvider --> OSDM_Provider : request with trips
end
OSDM_Provider -> OSDM_Provider : reconcile trips and \nconstruct global offers
OSDM_Provider --> API_Consumer: <Trips-offers-Collection with list of TripOffers compatible with (set of) indicated outward Offer(s) scrolling tokens offerHashes combinationHashes>
API_Consumer -> API_Consumer: <select compatible outward-inward offer pairs based on return combinationHashes>
end